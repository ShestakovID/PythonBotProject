import os.path
import pathlib

import asyncio
import logging
from aiogram import Bot, Dispatcher

import aiosqlite

from administering import router as administering_router
from message_checking import router as message_checking_router


logging.basicConfig(level=logging.INFO) #–í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç

async def main():
    #–ï—Å–ª–∏ –Ω–µ—Ç —Ñ–∞–π–ª–∞ –ë–î, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ (–≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –µ–≥–æ –Ω–µ—Ç)
    if not os.path.isfile(pathlib.Path(pathlib.Path.cwd(), 'botdb.db')):
        async with aiosqlite.connect('botdb.db') as db:
            #–§–æ—Ä–º–∞—Ç: –≤ –ø–µ—Ä–≤–æ–π –∫–æ–ª–æ–Ω–∫–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤–æ –≤—Ç–æ—Ä–æ–π - id –≥—Ä—É–ø–ø—ã (c -100)
            await db.execute('CREATE TABLE admins (admin bigint, grouptoadmin bigint)')
            await db.commit()


    bot = Bot(token="7788561583:AAGjvWBobYYm1oIOcdpR7-lj2pxI48opoQo")
    dp = Dispatcher() #–æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤—Ö–æ–¥—è—â–∏–µ

    dp.include_routers(administering_router, message_checking_router)

    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot) #–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤

if __name__ == "__main__":
    asyncio.run(main())


#–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –ª–∏—à–µ–Ω–∏–µ —á–µ—Ä–µ–ø–∞—Ö–∏ –ø–∞–Ω—Ü–∏—Ä—è? # –∞–Ω–µ–∫–¥–æ—Ç
# üê¢üê¢üê¢
#–î–∏—Å–ø–∞–Ω—Ü–∏—Ä–∏–∑–∞—Ü–∏—è.
